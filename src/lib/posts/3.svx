---
title: Måndag
date: "2023-01-24"
---

<script>
 let a = 0;
</script>

Idag började jag med att fortsätta med min idé at få blomblad som åker ner från skärmen då man klickar på blomman.
Jag började med att skapa en div component som inkapsylerade hela article komponenten. Denna "ligger under" resten av komponenterna i filen page.svelte. Den här bakgrundsbilden skulle de fallande bladen visas på.
jag började med att sätta bakgrundsbilden till ingenting 
(null), detta för att orginellt ska den vara samma som innan. 
Sen när man klickar på bloman/klickern så sätter du att bakgrundbilden som ska användas
är en gif. Denna gif spelas i bakgrunden av resten på siden. 
Jag ville att gifen skulle försvinna då man inte längre klickar så därfor kallade jag en sleep funktion som väntade
x antal millisekunder innan den kör ett givet komando. Mitt komando är att sätta 
tillbaka bakgrundsbilden till ingenting. 

Nedan syns sleep funktionen och min uppdaterade increment funktion.


```js 
// sleep time expects milliseconds
function sleep (time) {
  return new Promise((resolve) => setTimeout(resolve, time));
}

 function increment() {
    clicks = clicks + multiplier;
    console.log("click" + clicks);
    bg= `url("https://i.gifer.com/origin/94/9453bb10dcc37daf75abcf3fea141fc8.gif")`;
    sleep(500).then(()=>{
      bg=null
    })
  
  }

```

Jag satte sedan in en progress bar. Progress value satte jag till clickar och maximala talet clickar till 100.
Se koden nedan. Jag lade koden mellan article och header.
```js 
<article>
  <progress value={clicks} max="100"></progress>
  <header>
    <div class="grid">
      {#each upgrades as upgrade}
        <button
          class="upgrade"
          on:click={() => {
```
Nedan syns koden för hur jag bytte färg på bordern
``` js
progress{
  background-color:rgb(224, 191, 218);
  scrollbar-color: black;
}

progress[value]::-webkit-progress-value {
  background-image:
	   -webkit-linear-gradient(-45deg, 
	                           transparent 33%, rgba(0, 0, 0, .1) 33%, 
	                           rgba(224, 184, 212, 0.1) 66%, transparent 66%),
	   -webkit-linear-gradient(top, 
	                           rgba(237, 218, 236, 0.25), 
	                           rgba(245, 162, 231, 0.25)),
	   -webkit-linear-gradient(left, rgb(249, 63, 181), rgb(237, 213, 233));

    border-radius: 2px; 
    background-size: 35px 20px, 100% 100%, 100% 100%;
}
```
    
<h1>{a}</h1>

<button on:click={()=>{a = a + 1}}>CLICK ME</button>
